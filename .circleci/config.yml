version: '2.1'
orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3

jobs:
  run-lint:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            sudo wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64
            sudo chmod +x /bin/hadolint
      - run:
          name: Run Lint
          command: |
            hadolint Dockerfile

  docker-build:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout

      - setup_remote_docker:
          version: 19.03.13

      - run:
          name: Build Docker Image
          command: |
            export IMAGE_NAME=capstone-project
            docker build -t project4alina/$IMAGE_NAME .

  docker-push:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Push Docker Image to Docker Hub
          command: |
            export IMAGE_NAME=capstone-project
            docker build -t project4alina/$IMAGE_NAME .
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD 
            docker push project4alina/$IMAGE_NAME

  deploy-application:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
      docker-image-name:
        description: |
          Name of the docker image to be deployed
        type: string
      version-info:
        description: |
          App version information
        type: string
      aws-region:
        description: |
          AWS region
        type: string
        default: "us-east-1"
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
          aws-region: << parameters.aws-region >>
      - kubernetes/create-or-update-resource:
          resource-file-path: "deployments/deployment.yml"
          get-rollout-status: true
          resource-name: deployment/capstone
      - kubernetes/create-or-update-resource:
          resource-file-path: "deployments/deployment.yml"

  test-cluster:
    docker:
      - image: 'cimg/python:3.10'
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - kubernetes/install:
          kubectl-version: v1.22.0
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          command: |
            kubectl get services
          name: Test cluster

workflows:
  deployment:
    jobs:
      - run-lint
      - docker-build
      - docker-push:
          requires:
            - docker-build
#      - aws-eks/create-cluster:
#          cluster-name: capstone-project
#          requires:
#            - docker-push
      - deploy-application:
          requires:
            - docker-push
      - test-cluster:
          cluster-name: capstone-project
          requires:
#            - aws-eks/create-cluster
            - deploy-application
#      - aws-eks/delete-cluster:
#          cluster-name: my-eks-demo
#          requires:
#            - test-cluster
