version: '2.1'
orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3

jobs:
  run-lint:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            sudo wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64
            sudo chmod +x /bin/hadolint
      - run:
          name: Run Lint
          command: |
            hadolint Dockerfile

  docker-build:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout

      - setup_remote_docker:
          version: 19.03.13

      - run:
          name: Build Docker Image
          command: |
            export IMAGE_NAME=capstone-project
            docker build -t project4alina/$IMAGE_NAME .

  docker-push:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Push Docker Image to Docker Hub
          command: |
            export IMAGE_NAME=capstone-project
            docker build -t project4alina/$IMAGE_NAME .
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD 
            docker push project4alina/$IMAGE_NAME

  create-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - run:
          name: Inatall eksctl
          command: |
            if which eksctl > /dev/null; then
            echo "eksctl is already installed"
            exit 0
            fi
            mkdir -p eksctl_download
            curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C eksctl_download
            ls -lrt
            pwd  
            chmod +x eksctl_download/eksctl 
            SUDO=""
            if [ $(id -u) -ne 0 ] && which sudo > /dev/null ; then
              SUDO="sudo"
            fi
            $SUDO mv eksctl_download/eksctl /usr/local/bin/
            rmdir eksctl_download
      - aws-eks/install-aws-iam-authenticator:
          release-tag: ''
      - aws-eks/create-cluster:
          cluster-name: << parameters.cluster-name >>
          node-type: t2.medium

  test-cluster:
    docker:
      - image: 'cimg/python:3.10'
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - kubernetes/install:
          kubectl-version: v1.22.0
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          command: |
            kubectl get services
          name: Test cluster

workflows:
  deployment:
    jobs:
      - run-lint
      - docker-build
      - docker-push:
          requires:
            - docker-build
      - create-cluster:
          cluster-name: capstone-project
          requires:
            - docker-push
#      - aws-eks/create-cluster:
#          cluster-name: my-eks-demo
#      - test-cluster:
#          cluster-name: my-eks-demo
#          requires:
#            - aws-eks/create-cluster
#      - aws-eks/delete-cluster:
#          cluster-name: my-eks-demo
#          requires:
#            - test-cluster
